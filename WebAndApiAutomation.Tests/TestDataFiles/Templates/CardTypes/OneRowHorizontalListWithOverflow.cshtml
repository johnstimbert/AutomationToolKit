@*@model Banner.Project.Common.Areas.Cards.Models.FeaturedItemCard<Banner.Project.Common.Areas.Cards.Models.Institute>*@
@using Banner.Project.Common.Areas.Cards.Models;
@model Tuple<FeaturedItemCard<Institute>, CommonRenderingParameters, ListStyleRenderingParameters>
@using Sitecore.Mvc;
@using Banner.Foundation.Dictionary.Extensions;
@using Banner.Project.Common.Areas.Cards;
@using Banner.Project.Common.Areas.Cards.Repository;
@using Banner.Foundation.SitecoreExtensions;
@if (Model == null || Model.Item1 == null || Model.Item2 == null || Model.Item3 == null)
{
    return;
}

@{
    int allowedColumnsCount = CommonRepository.GetNoOFColumnAllowed(Model.Item3.NumberOfColumnsCount, (int)Constant.AllowedColumnCount.Four);
    var ViewAllPhrase = Html.Sitecore().Dictionary("/Features/Common/Cards/View All Institutes", "View All Institutes");
    var ViewLessPhrase = Html.Sitecore().Dictionary("/Features/Common/Cards/View Less Institutes", "View Less Institutes");
}

@helper GetSelectedInstitute(Institute Card)
{
    <div class="col-md-6 @(!string.IsNullOrEmpty(Model.Item3.NumberOfColumnsCssClass) ? Model.Item3.NumberOfColumnsCssClass : "col-lg-3") @Model.Item2.Padding">
        <div class="card feature-card card-border feature-card-sm">
            <div class="feature-card-img">
                @Card.ThumbnailImage
            </div>
            <div class="card-body feature-card-body">
                <div class="feature-card-content">
                    <div class="feature-card-title">@Card.Title</div>
                    @Card.ShortDescription
                </div>
                <div class="feature-card-link">
                    <a class="btn btn-primary " href="@Card.ItemUrl">
                        @Html.Raw(@Html.Sitecore().Dictionary("/Features/Common/Cards/Learn More", "Learn More"))
                    </a>
                </div>
            </div>
        </div>
    </div>
}

@helper GetBulletLinkDrawer(List<Institute> Cards)
{
    <div class="basic-list-card py-xl-4 ">
        <div class="card text-center border-0 rounded-0">
            <div class="card-body">
                <div class="">
                    <div class="mb-5">
                        @if (!MvcHtmlString.IsNullOrEmpty(@Model.Item1.Title))
                        {
                            <h2 class="card-title">@Model.Item1.Title</h2>
                        }
                    </div>
                    <div class="mb-3 text-center">
                        <ul class="bullet-list needs-section-list ">
                            @foreach (var Card in Cards)
                            {
                                <li class="col-md-6"><a href="@Card.ItemUrl">@Card.Title</a></li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@helper GetSelectedInstitutes(List<Institute> Cards)
{
    foreach (var Card in Cards)
    {
        @GetSelectedInstitute(Card)
    }
}


<div uatid="@FieldExtensions.UATID" class="text-card-container @Model.Item2.Padding">
    <div class="container">
        <div class="row">
            <div class="col-md-8 offset-md-2">
                <!-- CONTENT BLOCK -->
                <div class="content-block ">
                    @if (!MvcHtmlString.IsNullOrEmpty(@Model.Item1.Title))
                    {
                        <div class="title h2 card-header-justify ">@Model.Item1.Title</div>
                    }
                    @if (!MvcHtmlString.IsNullOrEmpty(@Model.Item1.BodyCopy))
                    {
                        <p class="content card-header-justify ">@Model.Item1.BodyCopy</p>
                    }
                </div>
            </div>
        </div>
        @if (Model.Item1.FeaturedCard != null && Model.Item1.FeaturedCard.Count > 0)
        {
            if ((Model.Item1.FeaturedCard.Count <= allowedColumnsCount) || (Model.Item3.ManageItemOverflow == Constant.CardActionTypes.Ignore))
            {
                <div class="row">
                    @GetSelectedInstitutes(Model.Item1.FeaturedCard.Take(allowedColumnsCount).ToList<Institute>())
                </div>
            }
            else
            {
                if ((Model.Item3.ManageItemOverflow == Constant.CardActionTypes.DrawerWithCards))
                {
                    <div>
                        <div class="row">
                            @GetSelectedInstitutes(Model.Item1.FeaturedCard.Take(allowedColumnsCount).ToList<Institute>())
                        </div>
                        <div class="row" data-js="readmore" data-json='{ "contentType": "view-all-content-drawer", "speed": 400, "collapsedHeight": 0, "moreLink": "@ViewAllPhrase", "lessLink": "@ViewLessPhrase"}'>
                            @GetSelectedInstitutes(Model.Item1.FeaturedCard.Skip(allowedColumnsCount).ToList<Institute>())
                        </div>
                    </div>
                }
                else if ((Model.Item3.ManageItemOverflow == Constant.CardActionTypes.DrawerWithBulletListLink))
                {
                    <div>
                        <div class="row">
                            @GetSelectedInstitutes(Model.Item1.FeaturedCard.Take(allowedColumnsCount).ToList<Institute>())
                        </div>
                        <div class="" data-js="readmore" data-json='{ "contentType": "view-all-content-drawer", "speed": 400, "collapsedHeight": 0, "moreLink": "@ViewAllPhrase", "lessLink": "@ViewLessPhrase"}'>
                            @GetBulletLinkDrawer(Model.Item1.FeaturedCard.Skip(allowedColumnsCount).ToList<Institute>())
                        </div>
                    </div>
                }
                else
                {
                    <div class="row">
                        @GetSelectedInstitutes(Model.Item1.FeaturedCard)
                    </div>
                }
            }
        }
    </div>
</div>
