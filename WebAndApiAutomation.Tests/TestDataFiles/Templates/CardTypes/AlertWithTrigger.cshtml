@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Data.Items;
@using Banner.Foundation.SitecoreExtensions
@model Banner.Feature.Alerts.Models.AlertWithTrigger

@if (Model == null)
{
	return;
}

<div class="modal modal--inactive @Model.AlertTextWidth" data-bh-component="Modal" data-bh-type='{"small":"modal"}'>
	<div class="modal__trigger">
		<div class="toast @Model.AlertTextTheme">
			<p class="toast__text">
				@Model.AlertText
				<svg class="toast__icon" xmlns="http://www.w3.org/2000/svg" width="9px" height="32px" viewBox="0 0 9 32">
					<g id="right-arrow" stroke-width="1" fill="none" fill-rule="evenodd" transform="translate(-277.000000, -142.000000)">
						<path d="M278,143 C278,143 280,147.977737 284,157.933211 C280,167.977737 278,173 278,173" stroke="#fff" stroke-width="2"></path>
					</g>
				</svg>
			</p>
		</div>
	</div>
	<div class="modal__overlay"></div>
	<div class="modal__content-container background-pattern-tertiary">
		<button class="modal__close">
			<svg xmlns="http://www.w3.org/2000/svg" width="18px" height="18px" viewBox="0 0 18 18">
				<g id="close" transform="translate(-272.000000, -21.000000)">
					<g transform="translate(272.000000, 21.000000)">
						<rect transform="translate(8.555992, 8.555992) rotate(-315.000000) translate(-8.555992, -8.555992) " x="-2.44400795" y="7.45599205" width="22" height="2.2"></rect>
						<rect transform="translate(8.555992, 8.555992) rotate(-45.000000) translate(-8.555992, -8.555992) " x="-2.44400795" y="7.45599205" width="22" height="2.2"></rect>
					</g>
				</g>
			</svg>
		</button>
		<div class="modal__content">
			<h2 class="section-title section-title--septenary">@Model.Title</h2>
			<p class="section-paragraph medium-margin-top">
				@Html.Raw(Model.BodyCopy)
			</p>

			@if (!string.IsNullOrEmpty(Model.Link)  || !string.IsNullOrEmpty(Model.SecondaryLink))
			{

				<div class="container-fluid no-padding">
					<div class="row no-gutters">
						<div class="col-12 medium-padding-right-small-only medium-padding-left-small-only text-align-center-small-only">
							
								@if (!string.IsNullOrEmpty(Model.Link) && !string.IsNullOrEmpty(Model.LinkText))
								{
									<a class="@Model.PrimaryButtonTheme display-inline-block text-align-center-small-only medium-margin-top full-width-small-only small-margin-right-medium" href="@Model.Link" target="@Model.Target">@Model.LinkText</a>
								}
								
								@if (!string.IsNullOrEmpty(Model.SecondaryLink) && !string.IsNullOrEmpty(Model.SecondaryLinkText))
								{
									<a class="@Model.SecondaryButtonTheme display-inline-block text-align-center-small-only medium-margin-top full-width-small-only " href="@Model.SecondaryLink" target="@Model.Target">@Model.SecondaryLinkText</a>
								}
							
						</div>
					</div>
				</div>

			}			
			<p>@Html.Raw(Model.SecondaryContent)</p>
		</div>
	</div>
</div>
